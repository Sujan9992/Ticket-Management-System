<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        03RDz/sf5iKUhnIkLgoAAAAASUVORK5CYII=
</value>
  </data>
</root>